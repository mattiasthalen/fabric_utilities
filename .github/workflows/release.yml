name: Release

on:
  push:
    tags:
      - "v*"  # Trigger on version tags like v1.0.0, v0.1.0, etc.
  workflow_dispatch:  # Allow manual triggering from GitHub UI
    inputs:
      skip_tests:
        description: 'Skip tests during release'
        required: false
        default: false
        type: boolean

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    # Skip tests if manually requested or if commit message contains [skip tests]
    if: ${{ !inputs.skip_tests && !contains(github.event.head_commit.message, '[skip tests]') }}
    strategy:
      matrix:
        python-version: ["3.11"]
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for setuptools-scm
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: uv sync
    
    - name: Run tests
      run: make test

  build:
    needs: test
    # Make build conditional - run if tests pass OR if tests are skipped
    if: ${{ always() && (needs.test.result == 'success' || needs.test.result == 'skipped') }}
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for setuptools-scm
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: uv sync
    
    - name: Build package
      run: uv build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for setuptools-scm and tags
    
    - name: Get latest tag
      id: get_tag
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          # For manual runs, use the latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
        else
          # For tag pushes, use the pushed tag
          echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        fi
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-files
        path: dist/
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.get_tag.outputs.tag }}
        files: dist/*
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(steps.get_tag.outputs.tag, 'rc') || contains(steps.get_tag.outputs.tag, 'alpha') || contains(steps.get_tag.outputs.tag, 'beta') }}